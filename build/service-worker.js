"use strict";var precacheConfig=[["/github.io/my-portfolio/index.html","f2788df2ce7844ec03493b2d8cc9eb4b"],["/github.io/my-portfolio/static/css/main.14fa466a.css","2d33e3014491b4896dd0ba7a9acf5a41"],["/github.io/my-portfolio/static/js/main.cef62f70.js","5a6a03ebe8bb5c493d71484512de6275"],["/github.io/my-portfolio/static/media/1280px-React-icon.svg.638be909.png","638be90904f9f9248d3c69cb2992c562"],["/github.io/my-portfolio/static/media/512px-Amazon_Web_Services_Logo.svg.cdc80143.png","cdc80143006d1b8d4440da9005cba02e"],["/github.io/my-portfolio/static/media/Rubik-Medium.6fa3da85.ttf","6fa3da851e142b514ac7f0e125955e4c"],["/github.io/my-portfolio/static/media/aptitudetest.03886c7a.png","03886c7a7885f7d51fb1a6bf89b01c91"],["/github.io/my-portfolio/static/media/catapi.e0e19d35.png","e0e19d35db5df379f50eb461ea9207f3"],["/github.io/my-portfolio/static/media/dogmaze.4eae9801.png","4eae98015849d087edfe8ccb09beecc7"],["/github.io/my-portfolio/static/media/expresssvg-logo-white.4c1a61b1.svg","4c1a61b1d93d953bb7963dd64a7674a2"],["/github.io/my-portfolio/static/media/html5.076c1f1a.svg","076c1f1a3947ca8297af798d9331cea0"],["/github.io/my-portfolio/static/media/mongodb2.9adf1701.svg","9adf17016faad19744e1adc0667b604e"],["/github.io/my-portfolio/static/media/mysql.7fd0a6bf.svg","7fd0a6bf13e45f22d538dc142299330e"],["/github.io/my-portfolio/static/media/node-white.b0aa7c87.svg","b0aa7c8767f0ed171ae7d24b21791291"],["/github.io/my-portfolio/static/media/php.ac8cc3fd.svg","ac8cc3fdee11dce97550270afa49f471"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/github.io/my-portfolio/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});